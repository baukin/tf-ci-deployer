---

- name: define vars for import repo
  set_fact:
    source_url: "{{ repo_data.gerrit_source_url | default(gerrit_source_url) }}"
    source_namespace: "{{ repo_data.src_namespace | default(repo_data.dest_namespace) }}"
    target_namespace: "{{ repo_data.dest_namespace }}"
    project_name: "{{ repo_data.project }}"

- name: check if gerrit project already exists
  uri:
    url: "http://{{ gerrit_host }}/projects/{{ target_namespace }}%2F{{ project_name }}"
    method: GET
    headers:
      Cookie: "{{ gerrit_cookies }}"
    status_code:
      - 200
      - 404
  register: repo

- name: delete gerrit project {{ target_namespace }}/{{ project_name }}
  uri:
    url: "http://{{ gerrit_host }}/projects/{{ target_namespace }}%2F{{ project_name }}/delete-project~delete"
    method: POST
    body_format: json
    body: '{"force":false,"preserve":false}'
    headers:
      Cookie: "{{ gerrit_cookies }}"
      x-gerrit-auth: "{{ gerrit_auth }}"
    status_code: 204
  when:
    - repo.status == 200
    - force_update_repos | default(false)

- name: create gerrit project {{ target_namespace }}/{{ project_name }}
  uri:
    url: "http://{{ gerrit_host }}/projects/{{ target_namespace }}%2F{{ project_name }}"
    method: PUT
    body_format: json
    body: '{}'
    headers:
      Cookie: "{{ gerrit_cookies }}"
      x-gerrit-auth: "{{ gerrit_auth }}"
    status_code: 201
  when: repo.status == 404 or (force_update_repos | default(false))

- name: remove existing git repository {{ target_namespace }}/{{ project_name }}
  shell: "docker exec -t gerrit_gerrit_1 rm -rf /var/gerrit/git/{{ target_namespace }}/{{ project_name }}.git"
  when: repo.status == 404 or (force_update_repos | default(false))

- name: clone git repository {{ target_namespace }}/{{ project_name }}
  shell: "docker exec -t gerrit_gerrit_1 git clone --mirror {{ source_url }}/{{ source_namespace }}/{{ project_name }}.git /var/gerrit/git/{{ target_namespace }}/{{ project_name }}.git"
  when: repo.status == 404 or (force_update_repos | default(false))
