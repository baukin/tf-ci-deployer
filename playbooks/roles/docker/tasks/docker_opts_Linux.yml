---

- name: create docker config directory
  file:
    path: "{{ nix_docker_config_directory }}"
    state: directory
    mode: 0755

- name: ensure docker config file exists
  file:
    path: "{{ nix_docker_config_file }}"
    state: touch

- name: read docker config file
  shell: "cat {{ nix_docker_config_file }}"
  register: docker_daemon_file

- name: convert entries to json
  set_fact:
    docker_daemon: "{{ docker_daemon_file.stdout | default('{}', true) | from_json }}"

- name: register parameters
  set_fact:
    live_restore: "{{ docker_daemon['live-restore'] | default(false) }}"
    mtu: "{{ docker_daemon['mtu'] | default(0) }}"
    config_changed: false

- name: add live-restore to docker config
  block:
    - name: insert or update live-restore
      set_fact:
        docker_daemon: "{{ docker_daemon | combine({ 'live-restore': true }) }}"
    - name: set changed flag
      set_fact:
        config_changed: true
  when: not live_restore

- name: add mtu to docker config
  block:
    - name: insert or update mtu
      set_fact:
        docker_daemon: "{{ docker_daemon | combine({ 'mtu': ansible_default_ipv4.mtu }) }}"
    - name: set changed flag
      set_fact:
        config_changed: true
  when: mtu|int != ansible_default_ipv4.mtu|int

- name: store docker config and reload daemon
  block:
    - name: write config to daemon.json
      copy:
        content: "{{ docker_daemon | to_nice_json }}"
        dest: "{{ nix_docker_config_file }}"

    - name: reload systemd
      shell: systemctl daemon-reload
      when: ansible_os_family == 'RedHat'

    - name: restart docker daemon
      service:
        enabled: yes
        name: docker
        state: restarted
  when: config_changed

